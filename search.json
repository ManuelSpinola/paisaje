[{"path":"https://manuelspinola.github.io/paisaje/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 paisaje authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://manuelspinola.github.io/paisaje/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Manuel Spínola. Author, maintainer.","code":""},{"path":"https://manuelspinola.github.io/paisaje/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Spínola M (2024). paisaje. version 0.1.0, https://manuelspinola.github.io/paisaje/.","code":"@Manual{,   title = {paisaje},   author = {Manuel Spínola},   year = {2024},   note = {version 0.1.0},   url = {https://manuelspinola.github.io/paisaje/}, }"},{"path":"https://manuelspinola.github.io/paisaje/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"h3sdm","text":"can install development version paisaje GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"ManuelSpinola/paisaje\")"},{"path":"https://manuelspinola.github.io/paisaje/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"h3sdm","text":"basic example shows use package: Let’s bring sf object Create h3 grid resolution 4 Make map","code":"library(paisaje) library(tidyverse) library(sf) library(h3jsr) nc = st_read(system.file(\"shape/nc.shp\", package=\"sf\")) #> Reading layer `nc' from data source  #>   `/Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library/sf/shape/nc.shp'  #>   using driver `ESRI Shapefile' #> Simple feature collection with 100 features and 14 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 h3_grid_nc <- get_h3_grid(nc, resolution = 4) ggplot() +   theme_minimal() +   geom_sf(data = nc, color = \"blue\", linewidth = 0.5) +   geom_sf(data = h3_grid_nc, alpha = 0.4, color = \"coral\", linewidth = 0.5)"},{"path":"https://manuelspinola.github.io/paisaje/reference/calculate_it_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate 5 information theory landscape metrics — calculate_it_metrics","title":"Calculate 5 information theory landscape metrics — calculate_it_metrics","text":"function allow calculate 5 information theory landscape metrics","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/calculate_it_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate 5 information theory landscape metrics — calculate_it_metrics","text":"","code":"calculate_it_metrics(landscape_raster, aoi_sf)"},{"path":"https://manuelspinola.github.io/paisaje/reference/calculate_it_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate 5 information theory landscape metrics — calculate_it_metrics","text":"landscape_raster categorical raster object: SpatRaster. aoi_sf spatial area interest sf object.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/calculate_it_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate 5 information theory landscape metrics — calculate_it_metrics","text":"sf object","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/calculate_it_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate 5 information theory landscape metrics — calculate_it_metrics","text":"Calculate landscape metrics: condent, ent, joinent, mutinf, relmutinf.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/calculate_it_metrics.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate 5 information theory landscape metrics — calculate_it_metrics","text":"wrapper function \"sample_lsm\"  landscapemetrics package (see References)","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/calculate_it_metrics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate 5 information theory landscape metrics — calculate_it_metrics","text":"Hesselbarth, M.H.K., Sciaini, M., , K.., Wiegand, K., Nowosad, J. 2019. landscapemetrics: open‐source R tool calculate landscape metrics. Ecography, 42: 1648-1657 (v2.1.4). Nowosad J., TF Stepinski. 2019. Information theory consistent framework quantification classification landscape patterns. https://doi.org/10.1007/s10980-019-00830-x Information theory-based framework analysis landscape patterns","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/calculate_it_metrics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate 5 information theory landscape metrics — calculate_it_metrics","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) library(terra) library(exactextractr)  clc <- rast(system.file('sao_miguel/clc2018_v2020_20u1.tif', package = 'exactextractr'))   bbox <- st_bbox(clc) |> st_as_sfc() |> st_as_sf()  h3_bbox <- get_h3_grid(bbox, resolution = 6)   result_sf <- calculate_it_metrics(clc, h3_bbox) } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/count_points_in_polygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Points within Polygons — count_points_in_polygons","title":"Count Points within Polygons — count_points_in_polygons","text":"Counts number points per species within polygon. points dataset `species` column, separate column created species counts. Spaces species names replaced underscores column naming.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/count_points_in_polygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Points within Polygons — count_points_in_polygons","text":"","code":"count_points_in_polygons(points_sf, polygons_sf)"},{"path":"https://manuelspinola.github.io/paisaje/reference/count_points_in_polygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Points within Polygons — count_points_in_polygons","text":"points_sf `sf` object containing point geometries. Must contain `species` column. polygons_sf `sf` object containing polygon geometries.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/count_points_in_polygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Points within Polygons — count_points_in_polygons","text":"`sf` object containing original polygons additional columns species count.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/count_points_in_polygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Points within Polygons — count_points_in_polygons","text":"","code":"if (FALSE) { # \\dontrun{ library(sf)  # Example points points_sf <- st_as_sf(data.frame(   id = 1:6,   species = c(\"Panthera onca\", \"Panthera onca\", \"Felis catus\",               \"Felis catus\", \"Felis catus\", \"Panthera leo\"),   x = c(1, 2, 3, 4, 5, 6),   y = c(1, 2, 3, 4, 5, 6) ), coords = c(\"x\", \"y\"), crs = 4326)  # Example polygons polygons_sf <- st_as_sf(data.frame(   id = 1:2,   geometry = st_sfc(     st_polygon(list(rbind(c(0,0), c(3,0), c(3,3), c(0,3), c(0,0)))),     st_polygon(list(rbind(c(3,3), c(6,3), c(6,6), c(3,6), c(3,3))))   ) ), crs = 4326)  # Count points per species within polygons result <- count_points_in_polygons(points_sf, polygons_sf) print(result) } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/create_cat_esa_10m.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Categorical Land Cover Raster from Copernicus Land Cover Data ESA WorldCover — create_cat_esa_10m","title":"Create Categorical Land Cover Raster from Copernicus Land Cover Data ESA WorldCover — create_cat_esa_10m","text":"function takes `SpatRaster` object representing Copernicus land cover data, reclassifies categorical values based specified land cover classes, returns resulting categorical raster.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/create_cat_esa_10m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Categorical Land Cover Raster from Copernicus Land Cover Data ESA WorldCover — create_cat_esa_10m","text":"","code":"create_cat_esa_10m(land_cover)"},{"path":"https://manuelspinola.github.io/paisaje/reference/create_cat_esa_10m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Categorical Land Cover Raster from Copernicus Land Cover Data ESA WorldCover — create_cat_esa_10m","text":"land_cover SpatRaster object representing input land cover raster. raster contain land cover classes defined Copernicus program.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/create_cat_esa_10m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Categorical Land Cover Raster from Copernicus Land Cover Data ESA WorldCover — create_cat_esa_10m","text":"SpatRaster object representing reclassified categorical land cover raster.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/create_cat_esa_10m.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Categorical Land Cover Raster from Copernicus Land Cover Data ESA WorldCover — create_cat_esa_10m","text":"function defines land cover categories assigns corresponding colors. reclassifies input raster based predefined categories.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/create_cat_esa_10m.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create Categorical Land Cover Raster from Copernicus Land Cover Data ESA WorldCover — create_cat_esa_10m","text":"WorldCover 2020 v100 Zanaga, D., Van De Kerchove, R., De Keersmaecker, W., Souverijns, N., Brockmann, C., Quast, R., Wevers, J., Grosu, ., Paccini, ., Vergnaud, S., Cartus, O., Santoro, M., Fritz, S., Georgieva, ., Lesiv, M., Carter, S., Herold, M., Li, Linlin, Tsendbazar, N.E., Ramoino, F., Arino, O., 2021. ESA WorldCover 10 m 2020 v100. https://doi.org/10.5281/zenodo.5571936 WorldCover 2021 v200 Zanaga, D., Van De Kerchove, R., Daems, D., De Keersmaecker,  W., Brockmann, C., Kirches, G., Wevers, J., Cartus, O.,  Santoro, M., Fritz, S., Lesiv, M., Herold, M., Tsendbazar,  N.E., Xu, P., Ramoino, F., Arino, O., 2022. ESA WorldCover  10 m 2021 v200. https://doi.org/10.5281/zenodo.7254221 ESA WorldCover project 2020 2021 / Contains modified Copernicus Sentinel data (2020 2021) processed ESA WorldCover consortium year either 2020 2021 WorldCover 2020 2021 map, respectively. ESA WorldCover","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/create_cat_esa_10m.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Categorical Land Cover Raster from Copernicus Land Cover Data ESA WorldCover — create_cat_esa_10m","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming 'land_cover_raster' is a SpatRaster object cat_raster <- create_cat_esa_10m(land_cover_raster) } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/extract_cat_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Categorical Raster Values by Polygons — extract_cat_raster","title":"Extract Categorical Raster Values by Polygons — extract_cat_raster","text":"Extract values categorical raster polygon sf object. Returns proportion category within polygon using exactextractr.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/extract_cat_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Categorical Raster Values by Polygons — extract_cat_raster","text":"","code":"extract_cat_raster(spat_raster_cat, sf_hex_grid)"},{"path":"https://manuelspinola.github.io/paisaje/reference/extract_cat_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Categorical Raster Values by Polygons — extract_cat_raster","text":"spat_raster_cat categorical raster (SpatRaster). sf_hex_grid sf object polygon geometries.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/extract_cat_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Categorical Raster Values by Polygons — extract_cat_raster","text":"sf object additional columns, one per raster category, representing proportion coverage.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/extract_cat_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Categorical Raster Values by Polygons — extract_cat_raster","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) library(terra) library(paisaje)  r <- rast(\"landcover.tif\") bbox <- st_bbox(r) |> st_as_sfc(crs = st_crs(4326)) |> st_as_sf() grid_sf <- get_h3_grid(bbox, resolution = 6) result_sf <- extract_cat_raster(r, grid_sf) head(result_sf) } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/extract_num_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Numeric Raster Values by Polygons — extract_num_raster","title":"Extract Numeric Raster Values by Polygons — extract_num_raster","text":"Extract numeric raster values polygon `sf` object. Uses `exactextractr` compute weighted mean based area overlap.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/extract_num_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Numeric Raster Values by Polygons — extract_num_raster","text":"","code":"extract_num_raster(spat_raster, polygons_sf)"},{"path":"https://manuelspinola.github.io/paisaje/reference/extract_num_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Numeric Raster Values by Polygons — extract_num_raster","text":"spat_raster `SpatRaster` object (single multilayer numeric raster). polygons_sf `sf` object polygon geometries (e.g., H3 hexagons).","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/extract_num_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Numeric Raster Values by Polygons — extract_num_raster","text":"`sf` object additional columns raster layer.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/extract_num_raster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Numeric Raster Values by Polygons — extract_num_raster","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) library(terra) library(exactextractr)  r <- rast(system.file(\"raster/bio.tif\", package = \"spData\")) grid_sf <- get_h3_grid(st_as_sf(st_bbox(r)), resolution = 6) result_sf <- extract_num_raster(r, grid_sf) head(result_sf) } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_esa_10m.html","id":null,"dir":"Reference","previous_headings":"","what":"Download land cover data — get_esa_10m","title":"Download land cover data — get_esa_10m","text":"function allows download land cover data  ESA WorldCover.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_esa_10m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download land cover data — get_esa_10m","text":"","code":"get_esa_10m(aoi_sf, year = NULL, output_folder = \".\")"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_esa_10m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download land cover data — get_esa_10m","text":"aoi_sf (character) sf_object defines area interest (AOI). sf object can represent geographical area, country, state, custom boundary. year Copernicus Global Land Service different versions land cover data different years. now, available years : 2020: corresponds v100 product version, 2021: corresponds v200 product version. output_folder specifies directory data files saved. default value output_folder \".\", represents current working directory.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_esa_10m.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download land cover data — get_esa_10m","text":"WorldCover 2020 v100 Zanaga, D., Van De Kerchove, R., De Keersmaecker, W., Souverijns, N., Brockmann, C., Quast, R., Wevers, J., Grosu, ., Paccini, ., Vergnaud, S., Cartus, O., Santoro, M., Fritz, S., Georgieva, ., Lesiv, M., Carter, S., Herold, M., Li, Linlin, Tsendbazar, N.E., Ramoino, F., Arino, O., 2021. ESA WorldCover 10 m 2020 v100. https://doi.org/10.5281/zenodo.5571936 WorldCover 2021 v200 Zanaga, D., Van De Kerchove, R., Daems, D., De Keersmaecker,  W., Brockmann, C., Kirches, G., Wevers, J., Cartus, O.,  Santoro, M., Fritz, S., Lesiv, M., Herold, M., Tsendbazar,  N.E., Xu, P., Ramoino, F., Arino, O., 2022. ESA WorldCover  10 m 2021 v200. https://doi.org/10.5281/zenodo.7254221 ESA WorldCover project 2020 2021 / Contains modified Copernicus Sentinel data (2020 2021) processed ESA WorldCover consortium year either 2020 2021 WorldCover 2020 2021 map, respectively. ESA WorldCover","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_esa_10m.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download land cover data — get_esa_10m","text":"","code":"if (FALSE) { # \\dontrun{ library(sf)  nc = st_read(system.file(\"shape/nc.shp\", package=\"sf\"))  get_esa_10m(nc, year = 2021, output_folder = \".\") } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_h3_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an H3 Hexagonal Grid for an sf Object — get_h3_grid","title":"Generate an H3 Hexagonal Grid for an sf Object — get_h3_grid","text":"Generates hexagonal grid H3 cells specified resolution intersect given `sf` object. Wrapper h3jsr functions.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_h3_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an H3 Hexagonal Grid for an sf Object — get_h3_grid","text":"","code":"get_h3_grid(sf_object, resolution = 7, expand_factor = 0.1)"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_h3_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an H3 Hexagonal Grid for an sf Object — get_h3_grid","text":"sf_object `sf` object. Must valid CRS. resolution Integer. H3 resolution level (1–16). Default 7. expand_factor Numeric. Expands bounding box ensure coverage. Default 0.1.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_h3_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an H3 Hexagonal Grid for an sf Object — get_h3_grid","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) nc <- st_read(system.file(\"shape/nc.shp\", package=\"sf\")) h3_grid_sf <- get_h3_grid(nc, resolution = 7) } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_nightlight_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Retrieve Nightlight Data — get_nightlight_data","title":"Download and Retrieve Nightlight Data — get_nightlight_data","text":"function downloads nightlight data Earth Observation Group's website. scrapes website find download latest available nightlight data specified year month.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_nightlight_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Retrieve Nightlight Data — get_nightlight_data","text":"","code":"get_nightlight_data(year, month, version = \"v10\", destination_dir = \".\", timeout = 1200)"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_nightlight_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Retrieve Nightlight Data — get_nightlight_data","text":"year numeric character year (e.g., 2020). month numeric character month (1-12). formatted two digits. version version nightlight data (default \"v10\"). destination_dir Directory save downloaded .tif file (default current directory). timeout Timeout seconds download (default 1200 seconds).","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_nightlight_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Retrieve Nightlight Data — get_nightlight_data","text":"file path downloaded .tif file, NULL error occurs.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_nightlight_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Retrieve Nightlight Data — get_nightlight_data","text":"function constructs appropriate URL specified year, month, data version. scrapes directory listing website find latest available .tif file requested time period. function downloads file saves specified directory. suitable file found, error occurs, returns NULL.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_nightlight_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Retrieve Nightlight Data — get_nightlight_data","text":"","code":"if (FALSE) { # \\dontrun{   # Example: Download nightlight data for March 2021   file_path <- get_nightlight_data(2021, 3)   print(file_path) } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve species occurrence records within an Area of Interest — get_records","title":"Retrieve species occurrence records within an Area of Interest — get_records","text":"function retrieves species occurrence records specified data providers within given area interest (AOI). records returned `sf` object, optionally duplicates removed based geometry. function wrapper occ function spocc package.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve species occurrence records within an Area of Interest — get_records","text":"","code":"get_records(species, aoi_sf, providers = NULL, limit = 500, remove_duplicates = FALSE, date = NULL)"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve species occurrence records within an Area of Interest — get_records","text":"species character vector species names query. aoi_sf `sf` object representing area interest. providers character vector data providers query (e.g., \"gbif\", \"inat\"). limit integer specifying maximum number records retrieve provider. Default 500. remove_duplicates logical value indicating whether remove duplicate geometries resulting `sf` object. Default FALSE. date character vector length 2 specifying date range (e.g., c(\"YYYY-MM-DD\", \"YYYY-MM-DD\")). Records outside range excluded.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve species occurrence records within an Area of Interest — get_records","text":"`sf` object containing species occurrence records fall within specified AOI meet query criteria. Returns `NULL` records found issues input.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve species occurrence records within an Area of Interest — get_records","text":"","code":"if (FALSE) { # \\dontrun{ nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\")) records <- get_records(species = \"Lynx rufus\", nc, providers = c(\"gbif\", \"inat\")) } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_records_by_hexagon.html","id":null,"dir":"Reference","previous_headings":"","what":"Get species records by hexagon — get_records_by_hexagon","title":"Get species records by hexagon — get_records_by_hexagon","text":"Retrieves species occurrence data within given AOI aggregates records H3 hexagonal grid cells. Counts number occurrences per species within hexagon. Returns `sf` object.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_records_by_hexagon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get species records by hexagon — get_records_by_hexagon","text":"","code":"get_records_by_hexagon(species, aoi_sf, res = 6, providers = NULL, remove_duplicates = FALSE, date = NULL, expand_factor = 0.1, limit = 500)"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_records_by_hexagon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get species records by hexagon — get_records_by_hexagon","text":"species Character vector species names. aoi_sf `sf` polygon AOI. res H3 resolution (1–16). Default 6. providers Character vector data providers (e.g., \"gbif\"). remove_duplicates Logical. Remove duplicate geometries. Default FALSE. date Character vector c(\"start\",\"end\") filter date. expand_factor Numeric. Expand AOI bbox full hex coverage. Default 0.1. limit Integer. Maximum number records download per species. Default 500.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_records_by_hexagon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get species records by hexagon — get_records_by_hexagon","text":"`sf` object hexagons counts per species.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_records_by_hexagon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get species records by hexagon — get_records_by_hexagon","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) nc <- sf::st_read(system.file(\"shape/nc.shp\", package=\"sf\")) hex_counts <- get_records_by_hexagon(   species = c(\"Lynx rufus\"),   aoi_sf = nc,   res = 6,   limit = 200 ) } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_future.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and process future environmental variables made by worldclim version 2.1. — get_worldclim_future","title":"Download and process future environmental variables made by worldclim version 2.1. — get_worldclim_future","text":"function downloads future climate data WorldClim based CMIP6 climate models scenarios. data can downloaded various resolutions clipped specific area interest (AOI) provided.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_future.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and process future environmental variables made by worldclim version 2.1. — get_worldclim_future","text":"","code":"get_worldclim_future(   var = \"bioc\",   res = \"30s\",   scenario = \"585\",   time_range = \"2021-2040\",   gcm = \"ACCESS-CM2\",   aoi = NULL,   retries = 3,   timeout = 300 )"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_future.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and process future environmental variables made by worldclim version 2.1. — get_worldclim_future","text":"var Character. Climate variable download. Available options : \"bioc\" - Bioclimatic variables (19 variables) \"prec\" - Precipitation \"tavg\" - Average temperature \"tmin\" - Minimum temperature \"tmax\" - Maximum temperature Default \"bioc\". res Character. Spatial resolution data. Available options : \"30s\" - ~1 km (30 arc-seconds) \"2.5m\" - ~5 km (2.5 arc-minutes) \"5m\" - ~10 km (5 arc-minutes) \"10m\" - ~20 km (10 arc-minutes) Default \"30s\". scenario Character. SSP scenario use future climate data. Available options : \"126\" - SSP1-2.6 (low emissions) \"245\" - SSP2-4.5 (intermediate emissions) \"370\" - SSP3-7.0 (high emissions) \"585\" - SSP5-8.5 (high emissions) Default \"585\". time_range Character. Time period future scenario. Available options : \"2021-2040\" \"2041-2060\" \"2061-2080\" \"2081-2100\" Default \"2021-2040\". gcm Character. General Circulation Model (GCM) use. Available options include: \"ACCESS-CM2\" \"ACCESS-ESM1-5\" \"AWI-CM-1-1-MR\" \"BCC-CSM2-MR\" \"CanESM5\" \"CanESM5-CanOE\" \"CMCC-ESM2\" \"CNRM-CM6-1\" \"CNRM-CM6-1-HR\" \"CNRM-ESM2-1\" \"EC-Earth3-Veg\" \"EC-Earth3-Veg-LR\" \"FIO-ESM-2-0\" \"GFDL-ESM4\" \"GISS-E2-1-G\" \"GISS-E2-1-H\" \"HadGEM3-GC31-LL\" \"INM-CM4-8\" \"INM-CM5-0\" \"IPSL-CM6A-LR\" \"MIROC-ES2L\" \"MIROC6\" \"MPI-ESM1-2-HR\" \"MPI-ESM1-2-LR\" \"MRI-ESM2-0\" \"UKESM1-0-LL\" Default \"ACCESS-CM2\". aoi `sf` `terra` vector object representing area interest (AOI) data clipped. Default `NULL` (clipping). retries Integer. number retry attempts downloading data case failure. Default 3. timeout Numeric. Timeout seconds downloading data. Default 300 seconds.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_future.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and process future environmental variables made by worldclim version 2.1. — get_worldclim_future","text":"`terra` raster object representing climate data, optionally clipped AOI.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_future.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download and process future environmental variables made by worldclim version 2.1. — get_worldclim_future","text":"Fick, Stephen E., Robert J. Hijmans. \"WorldClim 2: new 1-km spatial resolution climate surfaces global land areas.\" International journal climatology 37.12 (2017): 4302-4315.doi:10.1002/joc.5086","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_future.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and process future environmental variables made by worldclim version 2.1. — get_worldclim_future","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) library(terra)  nc <- st_read(system.file(\"shape/nc.shp\", package=\"sf\")) nc <- st_transform(nc, crs = 4326)  climate_future <- get_worldclim_future(var = \"tmin\", res = \"10m\", scenario = \"585\", time_range = \"2021-2040\", gcm = \"ACCESS-CM2\", aoi = nc) } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_historic.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and process environmental variables made by worldclim version 2.1. — get_worldclim_historic","title":"Download and process environmental variables made by worldclim version 2.1. — get_worldclim_historic","text":"function downloads historic worldclim version 2.1 processes according specified parameters. supports various climate variables resolutions, can clip downloaded data specified area interest (AOI). function designed handle download issues retry logic customizable timeouts.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_historic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and process environmental variables made by worldclim version 2.1. — get_worldclim_historic","text":"","code":"get_worldclim_historic(   var = \"bio\",   res = 10,   aoi = NULL,   retries = 3,   timeout = 300 )"},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_historic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and process environmental variables made by worldclim version 2.1. — get_worldclim_historic","text":"var character string specifying climate variable download. Possible values : . \"tavg\": Average temperature \"tmin\": Minimum temperature \"tmax\": Maximum temperature \"prec\": Precipitation \"srad\": Solar radiation \"wind\": Wind speed \"vapr\": Vapor pressure \"bio\": Bioclimatic variables res numeric value indicating resolution data. Valid options : 0.5: 30 arc-seconds (~1 km) 2.5: 2.5 arc-minutes (~5 km) 5: 5 arc-minutes (~10 km) 10: 10 arc-minutes (~20 km) aoi spatial object representing area interest. Can `sf` `terra` vector. retries integer specifying number times retry download fails. Default 3. timeout numeric value specifying maximum time (seconds) wait server response. Default 300 seconds.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_historic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and process environmental variables made by worldclim version 2.1. — get_worldclim_historic","text":"`SpatRaster` object containing downloaded  climate data, clipped specified AOI.","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_historic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download and process environmental variables made by worldclim version 2.1. — get_worldclim_historic","text":"Fick, Stephen E., Robert J. Hijmans. \"WorldClim 2: new 1-km spatial resolution climate surfaces global land areas.\" International journal climatology 37.12 (2017): 4302-4315.doi:10.1002/joc.5086","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/get_worldclim_historic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and process environmental variables made by worldclim version 2.1. — get_worldclim_historic","text":"","code":"if (FALSE) { # \\dontrun{ library(sf) library(terra)  nc <- st_read(system.file(\"shape/nc.shp\", package=\"sf\")) nc <- st_transform(nc, crs = 4326)  climate_historic <- get_worldclim_historic(var =  \"tmin\", res = 5, aoi = nc)  } # }"},{"path":"https://manuelspinola.github.io/paisaje/reference/paisaje-package.html","id":null,"dir":"Reference","previous_headings":"","what":"paisaje: Tools for landscape analysis — paisaje-package","title":"paisaje: Tools for landscape analysis — paisaje-package","text":"package contains functions perform landscape analysis functions allows get data landscape analysis.","code":""},{"path":[]},{"path":"https://manuelspinola.github.io/paisaje/reference/paisaje-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"paisaje: Tools for landscape analysis — paisaje-package","text":"Maintainer: Manuel Spínola mspinola10@gmail.com (ORCID)","code":""},{"path":"https://manuelspinola.github.io/paisaje/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""}]
